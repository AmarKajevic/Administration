@page "/products"
@attribute [Authorize(Policy = "AdminOnly")]

@inject UseCases.UseCaseInterfaces.IViewProductsUseCase ViewProductUseCase
@inject UseCases.UseCaseInterfaces.IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject UseCases.UseCaseInterfaces.IDeleteProductUseCase DeleteProductUseCase
@inject NavigationManager NavigationManager

<h3>Produkti</h3>
<br/>
@if(products != null)
{
    <table class="table table-dark table-striped">
        <thead>
            <tr>
                <th>Kategorija Produkta </th>
                 <th>Ime Produkta </th>
                 <th>Cena  </th>
                 <th>Bodovi</th>
                 <th>Kolicina</th>
                 <th></th>
            </tr>

        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                <td>@GetCategoryByIdUseCase.Execute(product.CategoryId.Value)?.Name</td>
                <td>@product.Name</td>
                <td>@(Math.Round(product.Price.Value, 2))</td>
                <td>@product.Points</td>
                <td>@product.Quantity</td>
                <td>
                    <button type="button" class="btn btn-link" @onclick="@(() => OnEditProduct(product))">Izmeni</button>
                    &nbsp
                    <button type="button" class="btn btn-link" @onclick="@(() => OnDeleteProduct(product.ProductId))">Izbrisi</button>
                </td>

                </tr>
            
            }
        </tbody>
    </table>
    
    
<br />
<button type="button" @onclick="OnClickAddProduct" class="btn btn-primary">Add Product</button>
}
 

@code {
    private IEnumerable<Product> products;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        products = ViewProductUseCase.Execute();


    }
    private void OnClickAddProduct()
    {
        NavigationManager.NavigateTo("/addproduct");
    }
    private void OnEditProduct (Product product)
    {
        NavigationManager.NavigateTo($"/editproduct/{product.ProductId}");
    }
    private void OnDeleteProduct(int productId)
    {
        DeleteProductUseCase.Execute(productId);
    }
}
