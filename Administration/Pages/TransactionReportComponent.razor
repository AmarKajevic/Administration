@page "/transactions"
@attribute [Authorize(Policy = "AdminOnly")]

@inject IJSRuntime JSRuntime
@inject UseCases.UseCaseInterfaces.IGetTransactionsUseCase GetTransactionsUseCase
@inject UseCases.DataStorePluginInterfaces.ITransactionRepository TransactionRepository

<div class="row">
    <div class="col-2">
        <label for="cashier">Username</label>
        <input type="text" id="cashier" class="form-control" @bind-value="cashierName"/>
    </div>
    <div class="col-3">
        <label for="startdate">Start Date</label>
        <input type="date" id="startdate" class="form-control" @bind-value="startDate" />
        </div>
    <div class="col-3">
        <label for="enddate">End Date</label>
        <input type="date" id="enddate" class="form-control" @bind-value="endDate" />
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="LoadTransactions">Search</button>
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
    </div>
    
</div>
<br/>
@if (transactions != null)
{
    <div id="printarea">
        <table class="table table-dark table-striped">
        <thead>
            <tr>
                <th>Date Time</th>
                <th>UserName</th>
                <th>Product Name</th>    
                <th>First name</th>
                <th>Last name</th>
                <th>Address</th>
                <th>City</th>
                <th>Postal code</th>
                <th>Phone number</th>
                <th>Qty Sold</th>
                <th>Personal Points</th>
                <th>General Points</th>
                <th>Price</th>
                <th>Sold Amt</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tran in transactions)
            {
                <tr>
                    <td>@tran.TimeStamp.ToString("yyyy-MM-dd hh:mm")</td>
                    <td>@tran.CashierName</td>
                    <td>@tran.ProductName</td>
                    <td>@tran.FirstName</td>
                    <td>@tran.LastName</td>
                    <td>@tran.Address</td>
                    <td>@tran.City</td>
                    <td>@tran.PostalCode</td>
                    <td>@tran.Phone</td>
                    <td>@tran.SoldQty</td>
                    <td>@tran.PersonalPoints</td>
                    <td>@tran.GeneralPoints</td>
                    <td style="text-align:right">@(string.Format("{0:c}", tran.Price))</td>
                    <td style="text-align:right">@(string.Format("{0:c}", tran.SoldQty * tran.Price))</td>
                        <td>  <button type="button" class="btn btn-link" @onclick="@(() => DeleteTransaction(@tran.TransactionId))">Delete</button></td>

                </tr>
            }
            <tr>
                <td colspan="8">&nbsp;</td>
               
                    <td style="text-align:right">
                        <b> total Personal Points:</b>
                    </td>
                    <td style="text-align:right">
                        <b>
                            @( @transactions.Sum(x => x.PersonalPoints ))
                        </b>

                    </td>
                    <td style="text-align:right">
                        <b> Total General Points:</b>
                    </td>
                    <td style="text-align:right">
                        <b>
                            @( @transactions.Sum(x => x.GeneralPoints + x.PersonalPoints))
                        </b>

                    </td>
                    <td style="text-align:right">
                        <b> Grand Total:</b>
                    </td>
                    <td style="text-align:right">
                        <b>
                            @(string.Format("{0:c}", @transactions.Sum(x => x.Price * x.SoldQty)))
                        </b>

                    </td>

            </tr>
        </tbody>
        <tfoot>

        </tfoot>
    </table>
    </div>
}


@code {
    private string cashierName;
    private DateTime startDate;
    private DateTime endDate;
    private IEnumerable<Transaction> transactions;
    protected override void OnInitialized()
    {
        base.OnInitialized();

        startDate = DateTime.Today;
        endDate = new DateTime(startDate.Year, startDate.Month, 1).AddMonths(1);
    }

    private void LoadTransactions()
    {
        transactions = GetTransactionsUseCase.Execute(cashierName, startDate, endDate);
    

    }
    private void PrintReport()
    {
        JSRuntime.InvokeVoidAsync("print");

    }
    private void DeleteTransaction(int transactionId)
    {
        
        TransactionRepository.DeleteTransaction(transactionId);

        
        LoadTransactions();
    }


}
