
@page "/categories"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager NavigationManager
@inject UseCases.UseCaseInterfaces.IViewCategoriesUseCase ViewCategoryUseCase
@inject UseCases.UseCaseInterfaces.IDeleteCategoryUseCase DeleteCategoryUseCase

<h3> Upravljaj Kategorijama</h3>
@if(categories != null)
{
    <table class="table table-dark table-striped">
            <thead>
                <tr>
                    <th>Ime Kategorije</th>
                    <th>Opis</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var category in categories)
                {
                    <tr>
                        <td>@category.Name</td>
                        <td>@category.Description</td>
                        <td>
                            <button type="button" @onclick ="@(() => EditCategory(category))" class="btn btn-link">Izmeni</button>
                            <button type="button" @onclick="@(() => DeleteCategory(category.CategoryId))" class="btn btn-link">Izbrisi</button>

                        </td>
                    </tr>
                }
            <tr></tr>
            </tbody>
        </table>

    
}
<br/>
<button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>

@code {
    private List<Category> categories;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();



    }
    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }
    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editcategory/{category.CategoryId}");
    }
    private void DeleteCategory(int categoryId)
    {
        DeleteCategoryUseCase.Delete(categoryId);
        LoadCategories();
    }
    private void LoadCategories()
    {
        categories = ViewCategoryUseCase.Execute()?.ToList();
    }
}
